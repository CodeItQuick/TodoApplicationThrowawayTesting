{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","newTodoDescription","updateNewTodoDescription","currentUser","setCurrentUser","show","setShow","handleClose","showEdit","setShowEdit","handleCloseEdit","todoEditId","updateTodoEditId","createEnabled","editEnabled","deleteEnabled","stateFeatureFlags","updateStateFeatureFlags","url","id","item","todoList","updateTodoList","useEffect","readOnClickHandler","fetch","method","headers","then","response","json","formattedResponse","createOnClickHandler","e","a","body","JSON","stringify","description","console","log","editOnClickHandler","user","deleteOnClickHandler","target","value","onCreateTodoDescriptionChange","className","Container","style","height","display","alignItems","justifyContent","flexDirection","DropdownButton","title","Dropdown","Item","href","onClick","Table","striped","bordered","hover","width","map","todoItem","Button","name","disabled","variant","Modal","onHide","Header","closeButton","Title","Body","type","onChange","Footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.308a01ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Table, Container, Button, Modal, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  const [newTodoDescription, updateNewTodoDescription] = useState('');\r\n  const [currentUser, setCurrentUser] = useState('default');\r\n  \r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //  Show/hide todo edit \r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const handleCloseEdit = () => setShowEdit(false);\r\n  const [todoEditId, updateTodoEditId] = useState(1);\r\n  const [stateFeatureFlags, updateStateFeatureFlags] = useState({createEnabled: false, editEnabled: false, deleteEnabled: false})\r\n\r\n  const url = process.env.NODE_ENV === \"development\" ? \"http://localhost:8080\" : \"https://demo-1626050777742.azurewebsites.net\";\r\n\r\n  const [todoList, updateTodoList] = useState([{id: 1, item: 'Launch Java App'}, {id: 2, item: 'Launch React App'}, \r\n    {id: 3, item: 'Create Frontend App'}, {id: 4, item: 'Create REST API Storage Calls'}, \r\n    {id: 5, item: 'Implement Togglz Feature Flags on TODO App'}])\r\n\r\n  useEffect(() => {\r\n    readOnClickHandler();\r\n    fetch(`${url}/api/features/states?user=${currentUser}`, {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" }})\r\n        .then(response => response.json())\r\n        .then(formattedResponse => {\r\n          updateStateFeatureFlags(formattedResponse);\r\n        })\r\n  }, [currentUser])\r\n\r\n  const createOnClickHandler = async (e) => {\r\n    await fetch(`${url}/api/create/`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ description: newTodoDescription })\r\n    })\r\n    await readOnClickHandler();\r\n  }\r\n\r\n  const readOnClickHandler = async (e) => {\r\n    const response = await fetch(`${url}/api/read/`, {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    });\r\n    const body = await response.json();\r\n    console.log(body);\r\n    updateTodoList(body || [])\r\n\r\n  }\r\n\r\n  const editShowModalHandler = (state) => setShowEdit(state)\r\n\r\n  const editOnClickHandler = async (e) => {\r\n    console.log(todoEditId)\r\n    await fetch(`${url}/api/edit?user=${currentUser}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: todoEditId, description: newTodoDescription, user: currentUser })\r\n    })\r\n    await readOnClickHandler();\r\n  }\r\n\r\n  const deleteOnClickHandler = async (e) => {\r\n    await fetch(`${url}/api/delete?user=${currentUser}`, {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: e?.target?.value, description: newTodoDescription, user: currentUser })\r\n    })\r\n    await readOnClickHandler();\r\n  }\r\n  const onCreateTodoDescriptionChange = (e) => updateNewTodoDescription(e?.target?.value)\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container style={{\r\n        height: \"100vh\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\",\r\n        flexDirection: \"column\"\r\n      }}>\r\n        <h1>TODO App: Logged In User </h1>\r\n        <DropdownButton id=\"dropdown-basic-button\" title={`Current User: ${currentUser}`}>\r\n          <Dropdown.Item href=\"#/action-1\" onClick={() => setCurrentUser(\"default\")}>default</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-2\" onClick={() => setCurrentUser(\"evan\")}>admin evan</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-3\" onClick={() => setCurrentUser(\"bob\")}>user bob</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-3\" onClick={() => setCurrentUser(\"dan\")}>user dan</Dropdown.Item>\r\n        </DropdownButton>\r\n        <Table striped bordered hover style={{ height: \"40%\", width: \"50%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Description</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {todoList.map((todoItem) =>\r\n              <tr key={todoItem?.id}>\r\n                <td>{todoItem?.id}</td>\r\n                <td>{todoItem?.item}</td>\r\n                <td><Button name={todoItem} disabled={!stateFeatureFlags?.editEnabled} onClick={() => { updateTodoEditId(todoItem?.id); editShowModalHandler(true)}} >Edit</Button></td>\r\n                <td><Button name={todoItem} disabled={!stateFeatureFlags?.deleteEnabled} onClick={deleteOnClickHandler} value={todoItem?.id}>Delete</Button></td>\r\n              </tr>)}\r\n          </tbody>\r\n        </Table>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"50%\" }} >\r\n          <Button variant=\"primary\" onClick={readOnClickHandler}>Read Data</Button>\r\n          <Button variant=\"primary\" onClick={handleShow} disabled={!stateFeatureFlags?.createEnabled}>\r\n            Create Todo\r\n          </Button>\r\n        </div>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>New Todo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Enter Description: <input type=\"text\" onChange={onCreateTodoDescriptionChange}></input></Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={createOnClickHandler}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={showEdit} onHide={handleCloseEdit}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Todo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Enter New Description: <input type=\"text\" onChange={onCreateTodoDescriptionChange}></input></Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseEdit}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={editOnClickHandler}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}